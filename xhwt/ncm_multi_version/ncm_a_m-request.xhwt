<xhwt:header>
{
    "fileName":"${request_group_class_name}.java",
    "fileDirs":[
        {
            "osName":"Windows",
            "path":"I:/NewChamaStudio/newchama_android/NewChama/newchama.common/src/main/java/com/newchama/api/V${version_code}/api/"
        },
        {
            "osName":"Mac OS X",
            "path":"/Users/newchama/Documents/ytxu/newchama_android2/NewChama/newchama.common/src/main/java/com/newchama/api/V${version_code}/api/"
        }
    ]
}
</xhwt:header>
package com.newchama.api.V${version_code}.api;

import android.content.Context;

import com.loopj.android.http.RequestHandle;
import com.loopj.android.http.ResponseHandlerInterface;

import com.newchama.api.BaseApi;
<xhwt:if isTrue="needImportOptionalRequestParamPackage">
import com.newchama.api.V${version_code}.request_param.${request_group_newchama}.*;
</xhwt:if_end>

import com.newchama.tool.net.NetRequest;
import com.newchama.tool.net.NetRequest.Method;
import com.newchama.tool.net.NetWorker;

import java.io.File;

<xhwt:retain type="import"/>

public class ${request_group_class_name} extends BaseApi {

	public static ${request_group_class_name} getInstance() {
		return Helper.instance;
	}

	private static class Helper {
		public static final ${request_group_class_name} instance = new ${request_group_class_name}();
	}

	private ${request_group_class_name}() {
	    super();
	}

<xhwt:retain type="field"/>

<xhwt:foreach each="requests">
	/**
	 * @version ${request_version}
	 * @requestUrl ${request_url}
	 <xhwt:if isNotEmpty="request_title">
	 * @title ${request_title}
	 </xhwt:if_end>
	 <xhwt:if isNotEmpty="request_desc">
	 * @desc ${request_desc}
	 </xhwt:if_end>
	 *
	 <xhwt:list each="headers">
	 * @param ${header_name} ${header_desc}
	 </xhwt:list>
	 <xhwt:list each="inputs">
	 <xhwt:if isTrue="input_isOptional">
	 * @param ${input_name} isOptional ${input_desc}
	 <xhwt:if_else>
	 * @param ${input_name} ${input_desc}
	 </xhwt:if_end>
	 </xhwt:list>
	 */
	public RequestHandle ${request_name}(Context cxt001,
	    <xhwt:list each="RESTful_fields" singleLine>
            </xhwt:start value="		"/>
            </xhwt:eachTemp value="String ${RESTful_field_name}, "/>
            </xhwt:end value=""/>
	    </xhwt:list>
	    <xhwt:list each="filtered_headers" singleLine>
            </xhwt:start value="		"/>
            </xhwt:eachTemp value="${header_request_param_type} ${header_name}, "/>
            </xhwt:end value=""/>
	    </xhwt:list>
	    <xhwt:list each="inputs" singleLine>
	        </xhwt:start value="		"/>
	        </xhwt:eachTemp value="${input_request_param_type} ${input_name}, "/>
	        </xhwt:end value=""/>
	    </xhwt:list>
		ResponseHandlerInterface response) {
		NetRequest request = new NetRequest();
		request.setMethod(Method.${request_METHOD});

        <xhwt:if isTrue="request_url_is_RESTful">
        <xhwt:list_replace each="RESTful_fields" replace_key="restful_name_list" list_value=", ${RESTful_field_name}">
		request.setUrl(String.format(getFullUrl("${request_convert_url}")${restful_name_list}));
		</list_replace>
        <xhwt:if_else>
		request.setUrl(getFullUrl("${request_normal_url}"));
        </xhwt:if_end>

	    <xhwt:list each="headers">
        <xhwt:if isTrue="isFilterParam">
   	    // request.addHeader("${header_name}", ${header_name});// 被过滤的header字段
        <xhwt:if_else>
   	    request.addHeader("${header_name}", ${header_name});
        </xhwt:if_end>
        </xhwt:list>
	    <xhwt:list each="inputs">
	    <xhwt:if isTrue="input_isOptional">
	    if (null != ${input_name}) request.addParam("${input_name}", ${input_name});
	    <xhwt:if_else>
	    request.addParam("${input_name}", ${input_name});
	    </xhwt:if_end>
        </xhwt:list>

		return NetWorker.execute(cxt001, request, response);
	}

    <xhwt:if isTrue="needGenerateOptionalRequestMethod">
	public RequestHandle ${request_name}(Context cxt001,
        <xhwt:list each="RESTful_fields" singleLine>
            </xhwt:start value="		"/>
            </xhwt:eachTemp value="String ${RESTful_field_name}, "/>
            </xhwt:end value=""/>
        </xhwt:list>
        <xhwt:list each="filtered_headers" singleLine>
            </xhwt:start value="		"/>
            </xhwt:eachTemp value="${header_request_param_type} ${header_name}, "/>
            </xhwt:end value=""/>
        </xhwt:list>
        <xhwt:list each="input_groups" singleLine>
            </xhwt:start value="		"/>
            </xhwt:eachTemp value="${request_param_class_name}.${input_group_class_name} ${input_group_name}, "/>
            </xhwt:end value=""/>
        </xhwt:list>
        ResponseHandlerInterface response) {
        return ${request_name}(cxt001,
        <xhwt:list each="RESTful_fields" singleLine>
            </xhwt:start value="		"/>
            </xhwt:eachTemp value="${RESTful_field_name}, "/>
            </xhwt:end value=""/>
        </xhwt:list>
        <xhwt:list each="filtered_headers" singleLine>
            </xhwt:start value="		"/>
            </xhwt:eachTemp value="${header_name}, "/>
            </xhwt:end value=""/>
        </xhwt:list>
        <xhwt:list each="input_groups_fileds" singleLine>
            </xhwt:start value="		"/>
            </xhwt:eachTemp value="${input_group_name}.${input_name}, "/>
            </xhwt:end value=""/>
        </xhwt:list>
        response);
    }

    </xhwt:if_end>
</xhwt:foreach>

<xhwt:retain type="method"/>

<xhwt:retain type="other"/>

}